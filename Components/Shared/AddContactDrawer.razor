@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using ContactManagement.Models
@using ContactManagement.Services
@inject IntranetHomeContext DbContext
@inject ISnackbar Snackbar
@inject IContactService ContactService

<MudDrawer @bind-Open="@IsOpen" Anchor=Anchor.End Variant="@DrawerVariant.Temporary" OverlayAutoClose="false"
    Width="45%">
    <MudItem>
        <MudIconButton Icon="@Icons.Material.Filled.Close" aria-label="close"
            OnClick="() => HandleDrawerOpenChange(false)" />
    </MudItem>
    <MudItem>
        <MudPaper Class="pa-4">
            <MudForm @ref="contactForm" @bind-IsValid="@isValidFormData" @bind-Errors="@errors">
                <MudTextField T="string" Label="Nama" @bind-Value="@newContact.Nama" />
                <MudTextField T="string" Label="Deskripsi" @bind-Value="@newContact.Deskripsi" />
                <MudTextField T="string" Label="Deskripsi Lain" @bind-Value="@newContact.MultiDeskripsi" />
                <MudTextField T="string" Label="Contact Person" @bind-Value="@newContact.Kontak" />
                <MudTextField T="string" Label="Alamat" @bind-Value="@newContact.Alamat" />
                <MudTextField T="string" Label="Alamat Lain" @bind-Value="@newContact.AlamatLain" />
                <MudTextField T="string" Label="No Telp" @bind-Value="@newContact.Telpno" />
                <MudTextField T="string" Label="No HP" @bind-Value="@newContact.Hpno" />
                <MudTextField T="string" Label="Fax" @bind-Value="@newContact.Faxno" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false"
                OnClick="@(()=> HandleAddButtonClick())">
                Tambah</MudButton>
        </MudPaper>
    </MudItem>
</MudDrawer>

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public EventCallback OnContactAdd { get; set; }
    private bool isValidFormData;
    private string[] errors = { };
    private MudForm? contactForm;
    private Contact newContact = new Contact();
    private async Task HandleDrawerOpenChange(bool isOpen)
    {
        IsOpen = isOpen;
        await IsOpenChanged.InvokeAsync(isOpen);
    }
    private async void HandleAddButtonClick()
    {
        Snackbar.Clear();
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomEnd;
        try
        {
            if (!isValidFormData) return;
            await ContactService.AddContactAsync(newContact);
            Snackbar.Add("Contact added successfully!", Severity.Success);
            newContact = new Contact();
            await OnContactAdd.InvokeAsync(null);
            IsOpen = false;
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Failed to add contact: {ex.Message}", Severity.Error);
        }
    }
}